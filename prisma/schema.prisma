generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String          @id @default(cuid())
  name                 String?
  email                String          @unique
  password             String
  notificationsEnabled Boolean         @default(false)
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt
  analyses             Analysis[]
  collections          Collection[]
  transcriptions       Transcription[]
}

model Analysis {
  id        String   @id @default(cuid())
  userId    String
  imageUrl  String
  result    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Transcription {
  id              String           @id @default(cuid())
  userId          String
  imageUrl        String
  text            String
  confidence      Float
  status          String
  error           String?
  source          String           @default("file")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  collectionItems CollectionItem[]
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, imageUrl, text, source])
}

model Collection {
  id          String           @id @default(cuid())
  userId      String
  name        String
  description String?
  accessId    String           @unique
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  user        User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  items       CollectionItem[]
}

model CollectionItem {
  id              String        @id @default(cuid())
  collectionId    String
  transcriptionId String
  createdAt       DateTime      @default(now())
  collection      Collection    @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  transcription   Transcription @relation(fields: [transcriptionId], references: [id], onDelete: Cascade)

  @@unique([collectionId, transcriptionId])
}
